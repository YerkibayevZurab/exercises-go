package db

import (
	"database/sql"
	"fmt"
	"log"
	"os"

	_ "github.com/lib/pq"
)

var DB *sql.DB

// InitDB –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
func InitDB() (*sql.DB, error) {
	dbURL := os.Getenv("DB_URL") // –ë–µ—Ä—ë–º URL –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
	if dbURL == "" {
		log.Fatal("‚ùå –û—à–∏–±–∫–∞: –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è DB_URL –Ω–µ –∑–∞–¥–∞–Ω–∞")
	}

	fmt.Println("üì° –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î...")
	database, err := sql.Open("postgres", dbURL)
	if err != nil {
		log.Fatalf("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: %v", err)
	}

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
	err = database.Ping()
	if err != nil {
		log.Fatalf("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∏–Ω–≥–µ –ë–î: %v", err)
	}

	fmt.Println("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL —É—Å–ø–µ—à–Ω–æ!")

	// –°–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—Ü—É, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
	createTableQuery := `
	CREATE TABLE IF NOT EXISTS posts (
		id SERIAL PRIMARY KEY,
		title TEXT NOT NULL,
		content TEXT NOT NULL,
		category TEXT NOT NULL,
		tags TEXT[]
	);
	`
	_, err = database.Exec(createTableQuery)
	if err != nil {
		log.Fatalf("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã: %v", err)
	}

	fmt.Println("‚úÖ –¢–∞–±–ª–∏—Ü–∞ 'posts' –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞ –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∞!")

	DB = database
	return DB, nil
}
